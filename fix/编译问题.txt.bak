2018年2月26日19:24:38
今天很多编译问题，#indef #define #endif的作用是防止同一个文件里面重复包含同一个头文件，也就是防止了编译问题，没防止link时候的重定义
今天，在将一个项目由dll引用改为直接头文件包含的过程中，触发了很多问题
1.原项目的预编译头，必须#define到代码中去
2.头文件和源文件，合并到头文件里面去时，需要注意不要出现循环引用
出现了头文件相互包含的时候，假如头文件a和头文件b相互包含，a头文件被引用较多，而b头文件只被a引用，则可以去掉b中的引用a，直接在b中
extern声明需要的函数或者对象，若b也被很多其它文件包含的话，则需要还是需要采用头文件源文件分离的形式，然后在源文件里面引用对应的头文件，
且b的源文件需要被包含到对应的项目中去，才能生成.obj文件，被link进去。
3.
#ifdef _MSC_VER //vs
#ifdef _DEBUG   //debug
else //release

4.同一个头文件，被两个不同的源文件包含，且这两个源文件位于同一个项目，
会产生两个对应的.obj，这两个.obj中会有重定义的对象（头文件中定义的对象），
这时可以两种方法解决
1.只是函数的话，可以通过把函数定义成inline函数
2.再定义一个头文件，将原头文件中定义的对象，用extern声明一遍，然后在两个源文件中直接使用。

5.用#undef取消宏的定义，只需要宏名称，宏函数的参数不需要加上

6.头文件函数声明加不加extern都是一样的，跟auto一样

